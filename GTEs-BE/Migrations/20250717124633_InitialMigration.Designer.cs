// <auto-generated />
using System;
using GTEs_BE.Datas;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace GTEs_BE.Migrations
{
    [DbContext(typeof(ApplicationContext))]
    [Migration("20250717124633_InitialMigration")]
    partial class InitialMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.18")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("GTEs_BE.Datas.ModelsEntity.Abitudine", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("ActiveDays")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<Guid?>("AssociatedTripId")
                        .HasColumnType("char(36)");

                    b.Property<bool>("AutoStartClimate")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Description")
                        .HasColumnType("longtext");

                    b.Property<TimeSpan?>("EndTime")
                        .HasColumnType("time(6)");

                    b.Property<int>("HabitType")
                        .HasColumnType("int");

                    b.Property<Guid?>("IdTrip")
                        .HasColumnType("char(36)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("tinyint(1)");

                    b.Property<double>("Latitude")
                        .HasColumnType("double");

                    b.Property<string>("Location")
                        .HasColumnType("longtext");

                    b.Property<double>("Longitude")
                        .HasColumnType("double");

                    b.Property<int?>("MinBatteryPercent")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<bool>("PlaySpotify")
                        .HasColumnType("tinyint(1)");

                    b.Property<int?>("PreferredTripMode")
                        .HasColumnType("int");

                    b.Property<int?>("RaceChipSetting")
                        .HasColumnType("int");

                    b.Property<int>("RadiusMeters")
                        .HasColumnType("int");

                    b.Property<int?>("RequiredWeather")
                        .HasColumnType("int");

                    b.Property<string>("SpotifyPlaylistId")
                        .HasColumnType("longtext");

                    b.Property<TimeSpan>("StartTime")
                        .HasColumnType("time(6)");

                    b.Property<int?>("TargetTemperature")
                        .HasColumnType("int");

                    b.Property<bool>("TriggerTripPlanner")
                        .HasColumnType("tinyint(1)");

                    b.HasKey("Id");

                    b.HasIndex("AssociatedTripId");

                    b.ToTable("Abitudini");
                });

            modelBuilder.Entity("GTEs_BE.Datas.ModelsEntity.Contatto", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("BirthDate")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("CarOwner")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<bool>("Passenger")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<bool>("SosContact")
                        .HasColumnType("tinyint(1)");

                    b.HasKey("Id");

                    b.ToTable("Contatti");
                });

            modelBuilder.Entity("GTEs_BE.Datas.ModelsEntity.Fermata", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<TimeSpan?>("ExpectedStopDuration")
                        .HasColumnType("time(6)");

                    b.Property<bool>("IsOptional")
                        .HasColumnType("tinyint(1)");

                    b.Property<double>("Latitude")
                        .HasColumnType("double");

                    b.Property<double>("Longitude")
                        .HasColumnType("double");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.Property<Guid?>("ViaggioId")
                        .HasColumnType("char(36)");

                    b.HasKey("Id");

                    b.HasIndex("ViaggioId");

                    b.ToTable("Fermate");
                });

            modelBuilder.Entity("GTEs_BE.Datas.ModelsEntity.Notifica", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("Gravity")
                        .HasColumnType("int");

                    b.Property<bool>("Read")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("Topic")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Notifiche");
                });

            modelBuilder.Entity("GTEs_BE.Datas.ModelsEntity.Viaggio", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<double>("CurrentFuelRangeKm")
                        .HasColumnType("double");

                    b.Property<string>("DestinationAddress")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<double>("EstimatedDistanceKm")
                        .HasColumnType("double");

                    b.Property<TimeSpan>("EstimatedDuration")
                        .HasColumnType("time(6)");

                    b.Property<double>("EstimatedFuelCostEuro")
                        .HasColumnType("double");

                    b.Property<double>("EstimatedTollCostEuro")
                        .HasColumnType("double");

                    b.Property<bool>("IncludeSuggestedStops")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IncludeTouristSuggestions")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsConfirmed")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("Mode")
                        .HasColumnType("int");

                    b.Property<string>("OriginAddress")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("ScheduledDepartureTime")
                        .IsRequired()
                        .HasColumnType("datetime(6)");

                    b.Property<string>("TripName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Viaggi");
                });

            modelBuilder.Entity("GTEs_BE.Datas.ModelsEntity.Abitudine", b =>
                {
                    b.HasOne("GTEs_BE.Datas.ModelsEntity.Viaggio", "AssociatedTrip")
                        .WithMany()
                        .HasForeignKey("AssociatedTripId");

                    b.Navigation("AssociatedTrip");
                });

            modelBuilder.Entity("GTEs_BE.Datas.ModelsEntity.Fermata", b =>
                {
                    b.HasOne("GTEs_BE.Datas.ModelsEntity.Viaggio", null)
                        .WithMany("Stops")
                        .HasForeignKey("ViaggioId");
                });

            modelBuilder.Entity("GTEs_BE.Datas.ModelsEntity.Viaggio", b =>
                {
                    b.Navigation("Stops");
                });
#pragma warning restore 612, 618
        }
    }
}
